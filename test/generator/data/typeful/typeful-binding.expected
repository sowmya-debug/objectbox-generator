// This file was automatically generated by ObjectBox, do not modify

package object

import (
	"github.com/google/flatbuffers/go"
	"github.com/objectbox/objectbox-go/objectbox"
	"github.com/objectbox/objectbox-go/objectbox/fbutils"
)

type typeful_ struct {
	Id  objectbox.TypeId
	Uid uint64
}

var TypefulBinding = typeful_{
	Id:  1,
	Uid: 8717895732742165505,
}

func (typeful_) AddToModel(model *objectbox.Model) {
	model.Entity("Typeful", 1, 8717895732742165505)
	model.Property("Id", objectbox.PropertyType_Long, 1, 2259404117704393152)
	model.PropertyFlags(objectbox.PropertyFlags_ID)
	model.Property("Int", objectbox.PropertyType_Int, 2, 6050128673802995827)
	model.Property("Int8", objectbox.PropertyType_Short, 3, 501233450539197794)
	model.Property("Int16", objectbox.PropertyType_Short, 4, 3390393562759376202)
	model.Property("Int32", objectbox.PropertyType_Int, 5, 2669985732393126063)
	model.Property("Int64", objectbox.PropertyType_Long, 6, 1774932891286980153)
	model.Property("Uint", objectbox.PropertyType_Int, 7, 6044372234677422456)
	model.Property("Uint8", objectbox.PropertyType_Short, 8, 8274930044578894929)
	model.Property("Uint16", objectbox.PropertyType_Short, 9, 1543572285742637646)
	model.Property("Uint32", objectbox.PropertyType_Int, 10, 2661732831099943416)
	model.Property("Uint64", objectbox.PropertyType_Long, 11, 8325060299420976708)
	model.Property("Bool", objectbox.PropertyType_Bool, 12, 7837839688282259259)
	model.Property("String", objectbox.PropertyType_String, 13, 2518412263346885298)
	model.Property("Byte", objectbox.PropertyType_Byte, 14, 5617773211005988520)
	model.Property("ByteVector", objectbox.PropertyType_ByteVector, 15, 2339563716805116249)
	model.Property("Rune", objectbox.PropertyType_Int, 16, 7144924247938981575)
	model.Property("Float32", objectbox.PropertyType_Float, 17, 161231572858529631)
	model.Property("Float64", objectbox.PropertyType_Double, 18, 7259475919510918339)
	model.Property("Date", objectbox.PropertyType_Date, 19, 7373105480197164748)
	model.EntityLastPropertyId(19, 7373105480197164748)
}

func (typeful_) GetId(entity interface{}) (uint64, error) {
	return entity.(*Typeful).Id, nil
}

func (typeful_) Flatten(entity interface{}, fbb *flatbuffers.Builder, id uint64) {
	ent := entity.(*Typeful)
	var offsetString = fbutils.CreateStringOffset(fbb, ent.String)
	var offsetByteVector = fbutils.CreateByteVectorOffset(fbb, ent.ByteVector)

	// build the FlatBuffers object
	fbb.StartObject(19)
	fbb.PrependUint64Slot(0, id, 0)
	fbb.PrependInt32Slot(1, int32(ent.Int), 0)
	fbb.PrependInt8Slot(2, ent.Int8, 0)
	fbb.PrependInt16Slot(3, ent.Int16, 0)
	fbb.PrependInt32Slot(4, ent.Int32, 0)
	fbb.PrependInt64Slot(5, ent.Int64, 0)
	fbb.PrependUint32Slot(6, uint32(ent.Uint), 0)
	fbb.PrependUint8Slot(7, ent.Uint8, 0)
	fbb.PrependUint16Slot(8, ent.Uint16, 0)
	fbb.PrependUint32Slot(9, ent.Uint32, 0)
	fbb.PrependUint64Slot(10, ent.Uint64, 0)
	fbb.PrependBoolSlot(11, ent.Bool, false)
	fbb.PrependUOffsetTSlot(12, offsetString, 0)
	fbb.PrependByteSlot(13, ent.Byte, 0)
	fbb.PrependUOffsetTSlot(14, offsetByteVector, 0)
	fbb.PrependInt32Slot(15, ent.Rune, 0)
	fbb.PrependFloat32Slot(16, ent.Float32, 0)
	fbb.PrependFloat64Slot(17, ent.Float64, 0)
	fbb.PrependUint64Slot(18, ent.Date, 0)
}

func (typeful_) ToObject(bytes []byte) interface{} {
	table := &flatbuffers.Table{
		Bytes: bytes,
		Pos:   flatbuffers.GetUOffsetT(bytes),
	}

	return &Typeful{
		Id:         table.GetUint64Slot(4, 0),
		Int:        int(table.GetUint32Slot(6, 0)),
		Int8:       table.GetInt8Slot(8, 0),
		Int16:      table.GetInt16Slot(10, 0),
		Int32:      table.GetInt32Slot(12, 0),
		Int64:      table.GetInt64Slot(14, 0),
		Uint:       uint(table.GetUint32Slot(16, 0)),
		Uint8:      table.GetUint8Slot(18, 0),
		Uint16:     table.GetUint16Slot(20, 0),
		Uint32:     table.GetUint32Slot(22, 0),
		Uint64:     table.GetUint64Slot(24, 0),
		Bool:       table.GetBoolSlot(26, false),
		String:     fbutils.GetStringSlot(table, 28),
		Byte:       table.GetByteSlot(30, 0),
		ByteVector: fbutils.GetByteVectorSlot(table, 32),
		Rune:       rune(table.GetInt32Slot(34, 0)),
		Float32:    table.GetFloat32Slot(36, 0),
		Float64:    table.GetFloat64Slot(38, 0),
		Date:       table.GetUint64Slot(40, 0),
	}
}

func (typeful_) MakeSlice(capacity int) interface{} {
	return make([]*Typeful, 0, capacity)
}

func (typeful_) AppendToSlice(slice interface{}, entity interface{}) interface{} {
	return append(slice.([]*Typeful), entity.(*Typeful))
}

type TypefulBox struct {
	*objectbox.Box
}

func BoxForTypeful(ob *objectbox.ObjectBox) *TypefulBox {
	return &TypefulBox{
		Box: ob.Box(1),
	}
}

func (box *TypefulBox) Get(id uint64) (*Typeful, error) {
	entity, err := box.Box.Get(id)
	if err != nil {
		return nil, err
	} else if entity == nil {
		return nil, nil
	}
	return entity.(*Typeful), nil
}

func (box *TypefulBox) GetAll() ([]*Typeful, error) {
	entities, err := box.Box.GetAll()
	if err != nil {
		return nil, err
	}
	return entities.([]*Typeful), nil
}

func (box *TypefulBox) Remove(entity *Typeful) (err error) {
	return box.Box.Remove(entity.Id)
}
