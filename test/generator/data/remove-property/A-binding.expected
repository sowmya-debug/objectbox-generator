// This file was automatically generated by ObjectBox, do not modify

package object

import (
	"github.com/google/flatbuffers/go"
	"github.com/objectbox/objectbox-go/objectbox"
	"github.com/objectbox/objectbox-go/objectbox/fbutils"
)

type ABinding struct {
}

func (ABinding) AddToModel(model *objectbox.Model) {
	model.Entity("A", 1, 8717895732742165505)
	model.Property("Id", objectbox.PropertyType_Long, 1, 2259404117704393152)
	model.PropertyFlags(objectbox.PropertyFlags_ID)
	model.EntityLastPropertyId(2, 6050128673802995827)
}

func (ABinding) GetId(entity interface{}) (uint64, error) {
	return entity.(*A).Id, nil
}

func (ABinding) Flatten(entity interface{}, fbb *flatbuffers.Builder, id uint64) {

	// build the FlatBuffers object
	fbb.StartObject(2)
	fbb.PrependUint64Slot(0, id, 0)
}

func (ABinding) ToObject(bytes []byte) interface{} {
	table := fbutils.GetRootAsTable(bytes, flatbuffers.UOffsetT(0))

	return &A{
		Id: table.GetUint64Slot(4, 0),
	}
}

func (ABinding) MakeSlice(capacity int) interface{} {
	return make([]*A, 0, capacity)
}

func (ABinding) AppendToSlice(slice interface{}, entity interface{}) interface{} {
	return append(slice.([]*A), entity.(*A))
}

type ABox struct {
	*objectbox.Box
}

func BoxForA(ob *objectbox.ObjectBox) *ABox {
	return &ABox{
		Box: ob.Box(1),
	}
}

func (box *ABox) Get(id uint64) (*A, error) {
	entity, err := box.Box.Get(id)
	if err != nil {
		return nil, err
	} else if entity == nil {
		return nil, nil
	}
	return entity.(*A), nil
}

func (box *ABox) GetAll() ([]*A, error) {
	entities, err := box.Box.GetAll()
	if err != nil {
		return nil, err
	}
	return entities.([]*A), nil
}

func (box *ABox) Remove(entity *A) (err error) {
	return box.Box.Remove(entity.Id)
}
